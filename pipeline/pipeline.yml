shared:
  # Task : sync and merge with rsync 2 rep. Used to merge stack and config
  - &merge-stack-and-config
    platform: linux
    image_resource:
      type: docker-image
      source:
        repository: cycloid/cycloid-toolkit
        tag: latest
    #run:
    #  path: /usr/bin/merge-stack-and-config
    run:
      path: /bin/sh
      args:
      - -c
      - |
        /usr/bin/merge-stack-and-config
        if [[ "$TAG_COMMIT_ID" == "true" ]]; then
          echo ${EXTRA_TAGS} $(cat config/.git/short_ref) > merged-stack/.ci/TAGS
        else
          echo ${EXTRA_TAGS} > merged-stack/.ci/TAGS
        fi
        if [ -n "$BUILD_ARGS" ] && [[ "$BUILD_ARGS" != "null" ]]; then
          python -c "import json, os, yaml; print('\n'.join([ '%s=%s' % (k,v) for k, v in json.loads(os.environ['BUILD_ARGS'].replace('\\n','\\\\\\\n')).items()]))" >> merged-stack/.ci/build_args_file
        fi
    outputs:
      - name: merged-stack
        path: "merged-stack"

resource_types:

- name: registry-image
  type: docker-image
  privileged: true
  source:
    repository: concourse/registry-image-resource
    tag: latest

resources:

- name: image
  type: registry-image
  source:
    #version: every
    repository: ((registry_image_name))
    username: ((registry_username))
    password: ((registry_password))
    tag: ((registry_tag))


- name: git_stack
  type: git
  check_every: 2m
  source:
    uri: https://github.com/cycloid-community-catalog/stack-dockerbuild
    branch: ((stack_git_branch))
    paths:
      - docker/*

- name: git_code
  type: git
  check_every: 2m
  source:
    uri: ((code_git_repository))
    branch: ((code_git_branch))
    private_key: ((code_git_private_key))
    paths:
      - ((code_build_context))/*

jobs:

- name: build
  build_logs_to_retain: 3
  plan:

  - aggregate:
    - get: git_stack
      trigger: true
    - get: git_code
      trigger: true

  - task: merge-stack-and-config
    config:
      <<: *merge-stack-and-config
      inputs:
      - name: git_code
        path: "config"
      - name: git_stack
        path: "stack"
    params:
      CONFIG_PATH: ((code_build_context))
      STACK_PATH: docker
      EXTRA_TAGS: ((registry_extra_tags))
      BUILD_ARGS: ((code_build_args))
      TAG_COMMIT_ID: ((registry_tag_commit_id))

  - task: tests
    file: merged-stack/.ci/tests.yml
    privileged: true

  - task: build
    file: merged-stack/.ci/build.yml
    privileged: true
    params:
      REPOSITORY: ((registry_image_name))
      TAG: ((registry_tag))
      CONTEXT: merged-stack
      DOCKERFILE: merged-stack/((code_dockerfile_location))
      BUILD_ARGS_FILE: merged-stack/.ci/build_args_file

  - task: post-tests
    file: merged-stack/.ci/post-tests.yml
    privileged: true
    params:
      TAG: ((registry_tag))
      REPOSITORY: ((registry_image_name))

  - put: image
    params:
      additional_tags: merged-stack/.ci/TAGS
      image: image/image.tar
